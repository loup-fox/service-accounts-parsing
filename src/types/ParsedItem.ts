import { z } from "zod";

export const ParsedItem = z.object({
  type: z.union([
    z.literal("Order"),
    z.literal("OrderItem"),
    z.literal("UserItem"),
  ]),
  data: z
    .object({
      address: z.unknown().optional(),
      author: z.unknown().optional(),
      billingAddress: z.unknown().optional(),
      brand: z.unknown().optional(),
      category: z.unknown().optional(),
      console: z.unknown().optional(),
      credit: z.unknown().optional(),
      currency: z.unknown().optional(),
      deliveryAddress: z.unknown().optional(),
      deliveryDateMax: z.unknown().optional(),
      deliveryDateMin: z.unknown().optional(),
      deliveryFee: z.unknown().optional(),
      deliveryTimeMax: z.unknown().optional(),
      deliveryTimeMin: z.unknown().optional(),
      deliveryType: z.unknown().optional(),
      description: z.unknown().optional(),
      distinctItemQuantity: z.unknown().optional(),
      driver: z.unknown().optional(),
      fidelityAdditionalPoints: z.unknown().optional(),
      fidelityProgramName: z.unknown().optional(),
      firstName: z.unknown().optional(),
      isGift: z.unknown().optional(),
      name: z.unknown().optional(),
      option_1: z.unknown().optional(),
      option_2: z.unknown().optional(),
      option_3: z.unknown().optional(),
      option_4: z.unknown().optional(),
      option_5: z.unknown().optional(),
      option_6: z.unknown().optional(),
      orderDate: z.unknown().optional(),
      orderItemQuantity: z.unknown().optional(),
      orderQuantity: z.unknown().optional(),
      orderTime: z.unknown().optional(),
      originalOrderNumber: z.union([z.string(), z.number()]).optional(),
      originalOrderNumberRaw: z.string().optional(),
      otherFee1: z.unknown().optional(),
      otherFee1Name: z.unknown().optional(),
      otherFee2: z.unknown().optional(),
      otherFee2Name: z.unknown().optional(),
      otherFees: z.unknown().optional(),
      paymentType: z.unknown().optional(),
      pricePerUnit: z.unknown().optional(),
      processingFee: z.unknown().optional(),
      promo: z.unknown().optional(),
      publisher: z.unknown().optional(),
      reference: z.unknown().optional(),
      seller: z.unknown().optional(),
      state: z.unknown().optional(),
      tax: z.unknown().optional(),
      totalFees: z.unknown().optional(),
      totalPaid: z.unknown().optional(),
      totalPricePaid: z.unknown().optional(),
      urlImg: z.unknown().optional(),
      urlItem: z.unknown().optional(),
      voucher: z.unknown().optional(),
      arrivalAddress: z.unknown().optional(),
      arrivalTime: z.unknown().optional(),
      departureAddress: z.unknown().optional(),
      departureTime: z.unknown().optional(),
      distance: z.unknown().optional(),
      distanceUnit: z.unknown().optional(),
      numberOfUsers: z.unknown().optional(),
      category_breadcrumb: z.unknown().optional(),
      br_brand: z.unknown().optional(),
      documentId: z.unknown().optional(),
      domain: z.unknown().optional(),
      from: z.unknown().optional(),
      index: z.unknown().optional(),
      orderId: z.unknown().optional(),
      parser: z.unknown().optional(),
      parserId: z.unknown().optional(),
      parserIdSql: z.unknown().optional(),
      parserName: z.unknown().optional(),
      parserVersion: z.unknown().optional(),
      signature: z.unknown().optional(),
      type: z.unknown().optional(),
      uid: z.unknown().optional(),
      userId: z.unknown().optional(),
    })
    .passthrough(),
});
export type ParsedItem = z.infer<typeof ParsedItem>;
